# rsyslog configuration file (for Red Hat-based systems)
# note that most of this config file uses old-style format,
# because it is well-known AND quite suitable for simple cases
# like we have with the default config. For more advanced
# things, RainerScript configuration is suggested.
#
# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# or latest version online at http://www.rsyslog.com/doc/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

#### MODULES ####

module(load="imuxsock") # provides support for local system logging (e.g. via logger command)
module(load="imklog")   # provides kernel logging support (previously done by rklogd)
#module(load"immark")  # provides --MARK-- message capability

# Provides UDP syslog reception
# for parameters see http://www.rsyslog.com/doc/imudp.html
#module(load="imudp") # needs to be done just once
#input(type="imudp" port="514")

# Provides TCP syslog reception
# for parameters see http://www.rsyslog.com/doc/imtcp.html
#module(load="imtcp") # needs to be done just once
#input(type="imtcp" port="514")


#### GLOBAL DIRECTIVES ####

# Set the default message template
$template KubosWithSeverity,"%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag%<%syslogseverity-text%>%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"
$ActionFileDefaultTemplate KubosWithSeverity

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf


#### RULES ####

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
$outchannel messages_log,/var/log/messages,10000,/home/system/kubos/log-rotate.sh messages
*.info;mail.none;authpriv.none;cron.none                :omfile:$messages_log

# The authpriv file has restricted access.
$outchannel secure_log,/var/log/secure,10000,/home/system/kubos/log-rotate.sh secure
authpriv.*                                              :omfile:$secure_log

# Log all the mail messages in one place.
$outchannel maillog_log,/var/log/maillog,10000,/home/system/kubos/log-rotate.sh maillog
mail.*                                                  :omfile:$maillog_log

# Log cron stuff
$outchannel cron_log,/var/log/cron,10000,/home/system/kubos/log-rotate.sh cron
cron.*                                                  :omfile:$cron_log

# Everybody gets emergency messages
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
$outchannel spooler_log,/var/log/spooler,10000,/home/system/kubos/log-rotate.sh spooler
uucp,news.crit                                          :omfile:$spooler_log

# Save boot messages also to boot.log
$outchannel boot_log,/var/log/boot.log,10000,/home/system/kubos/log-rotate.sh boot.log
local7.*                                                :omfile:$boot_log


# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$WorkDirectory /var/lib/rsyslog # where to place spool files
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.* @@remote-host:514
# ### end of the forwarding rule ###
